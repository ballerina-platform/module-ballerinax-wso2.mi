/*
 * Copyright (c) 2024, WSO2 LLC. (https://www.wso2.com).
 *
 * WSO2 LLC. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
}

group = project.group
version = project.version

repositories {
    mavenCentral()
    maven {
        url = 'https://maven.wso2.org/nexus/content/repositories/releases/'
    }

    maven {
        url = 'https://maven.wso2.org/nexus/content/groups/wso2-public/'
    }

    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
    maven {
        url = 'https://maven.pkg.github.com/ballerina-platform/*'
        credentials {
            username System.getenv("packageUser")
            password System.getenv("packagePAT")
        }
    }
}

dependencies {
    implementation "org.ballerinalang:ballerina-cli:${ballerinaLangVersion}"
    implementation 'info.picocli:picocli:4.0.1'
    implementation "org.ballerinalang:ballerina-lang:${ballerinaLangVersion}"
    implementation "org.ballerinalang:ballerina-tools-api:${ballerinaLangVersion}"

    testImplementation 'org.testng:testng:7.7.0'
}

test {
    systemProperty "ballerina.home", "build/ballerina/ballerina-${ballerinaLangVersion}-swan-lake/" +
            "distributions/ballerina-${ballerinaLangVersion}"
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
    dependencies {
        implementation fileTree(dir: 'src/test/resources/libs', include: '*.jar')
    }
}

task downloadBallerina(type: Download) {
    src([
            "https://dist.ballerina.io/downloads/${ballerinaLangVersion}/" +
                    "ballerina-${ballerinaLangVersion}-swan-lake.zip"
    ])
    dest file("build")
    overwrite false
}

task unzipFile(type: Copy) {
    dependsOn("downloadBallerina")
    from(zipTree("build/ballerina-${ballerinaLangVersion}-swan-lake.zip"))
    into("build/ballerina")
}

task copyBallerinaJars(type: Copy) {
    dependsOn("buildBallerinaProject")
    projects.each { project ->
        from("src/test/resources/ballerina/${project}/target/bin/${project}.jar")
        into('src/test/resources/libs')
    }
}
compileTestJava.dependsOn("copyBallerinaJars")
processTestResources.dependsOn("copyBallerinaJars")

test.dependsOn(":mi-ballerina:localPublish")
test.dependsOn("unzipFile")
test.dependsOn("copyBallerinaJars")

task buildBallerinaProject {
    exec {
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine 'cmd', "/c", "bal build src/test/resources/ballerina/gen"
        } else {
            commandLine 'sh', "-c", "bal build src/test/resources/ballerina/gen"
        }
    }
}
